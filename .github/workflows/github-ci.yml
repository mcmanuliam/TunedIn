name: CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.19'
          cache: 'npm'

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Create src/config/local.ts
        run: |
          mkdir -p src/config
          cat <<EOL > src/config/local.ts
          /**
           * local.ts
           *
           * This file is used to store sensitive information such as API keys and URLs
           * that should not be committed to version control. By keeping this data in
           * local.ts, we ensure that these credentials remain secure and are only available
           * in the local development environment.
           *
           * The values defined in this file are merged into the environment configuration
           * files (environment.ts and environment.prod.ts) to be used throughout the application.
           *
           * IMPORTANT:
           * - Do not commit this file to the repository.
           * - Make sure this file is listed in your .gitignore to avoid accidental commits.
           */

          interface IBackendConfig {
            key: string;
            url: string;
          }

          interface IClientSecret {
            client: string;
            secret: string;
          }

          interface ILocalConfig {
            backend: IBackendConfig,
            spotify: IClientSecret,
            ticketmaster: IClientSecret,
          }

          const backend: IBackendConfig = {
            key: '${{ secrets.BACKEND_KEY }}',
            url: '${{ secrets.BACKEND_URL }}',
          }

          const spotify: IClientSecret = {
            client: '${{ secrets.SPOTIFY_CLIENT_ID }}',
            secret: '${{ secrets.SPOTIFY_CLIENT_SECRET }}',
          }

          const ticketmaster: IClientSecret = {
            client: '${{ secrets.TICKETMASTER_CLIENT_ID }}',
            secret: '${{ secrets.TICKETMASTER_CLIENT_SECRET }}',
          }

          export const local: ILocalConfig = {
            backend,
            spotify,
            ticketmaster,
          };
          EOL

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build the project
        run: npm run build

      - name: Run ESLint
        run: npm run lint

  build-ios:
    runs-on: macos-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.19'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Create src/config/local.ts
        run: |
          mkdir -p src/config
          cat <<EOL > src/config/local.ts
          /**
           * local.ts
           *
           * This file is used to store sensitive information such as API keys and URLs
           * that should not be committed to version control. By keeping this data in
           * local.ts, we ensure that these credentials remain secure and are only available
           * in the local development environment.
           *
           * The values defined in this file are merged into the environment configuration
           * files (environment.ts and environment.prod.ts) to be used throughout the application.
           *
           * IMPORTANT:
           * - Do not commit this file to the repository.
           * - Make sure this file is listed in your .gitignore to avoid accidental commits.
           */

          interface IBackendConfig {
            key: string;
            url: string;
          }

          interface IClientSecret {
            client: string;
            secret: string;
          }

          interface ILocalConfig {
            backend: IBackendConfig,
            spotify: IClientSecret,
            ticketmaster: IClientSecret,
          }

          const backend: IBackendConfig = {
            key: '${{ secrets.BACKEND_KEY }}',
            url: '${{ secrets.BACKEND_URL }}',
          }

          const spotify: IClientSecret = {
            client: '${{ secrets.SPOTIFY_CLIENT_ID }}',
            secret: '${{ secrets.SPOTIFY_CLIENT_SECRET }}',
          }

          const ticketmaster: IClientSecret = {
            client: '${{ secrets.TICKETMASTER_CLIENT_ID }}',
            secret: '${{ secrets.TICKETMASTER_CLIENT_SECRET }}',
          }

          export const local: ILocalConfig = {
            backend,
            spotify,
            ticketmaster,
          };
          EOL

      - name: Build the project for iOS
        run: |
          npm run build
          npx ionic cap copy ios
          npx ionic cap sync ios

      - name: Set up Xcode
        run: sudo xcode-select -s /Applications/Xcode.app

      - name: Build iOS App
        run: npx ionic cap build ios --no-open
