{
  "root": true,
  "ignorePatterns": ["projects/**/*"],
  "plugins": [
    "pug",
    "@typescript-eslint",
    "import",
    "jsdoc",
    "rxjs",
    "angular",
    "sort-keys"
  ],
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "project": ["tsconfig.json"],
        "createDefaultProgram": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:import/warnings",
        "plugin:import/typescript",
        "plugin:jsdoc/recommended",
        "plugin:rxjs/recommended"
      ],
      "rules": {
        "jsdoc/require-param": "off",
        "prefer-rest-params": "off",
        "jsdoc/require-param-type": "off",
        "jsdoc/require-returns": "off",
        "jsdoc/no-undefined-types": "off",
        "jsdoc/require-jsdoc": "off",
        "rxjs/no-implicit-any-catch": "off",
        "@typescript-eslint/no-unsafe-enum-comparison": "off",
        "@typescript-eslint/unbound-method": "off",
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {"accessibility": "explicit"}
        ],
        "@typescript-eslint/ban-types": "off",
        "@typescript-eslint/member-ordering": ["warn", {
          "default": {
            "memberTypes": [
              "signature",
              "call-signature",
              "public-static-field",
              "protected-static-field",
              "private-static-field",

              "public-decorated-field",
              "protected-decorated-field",
              "private-decorated-field",

              "public-instance-field",
              "protected-instance-field",
              "private-instance-field",

              "public-abstract-field",
              "protected-abstract-field",

              "public-field",
              "protected-field",
              "private-field",

              "static-field",
              "instance-field",
              "abstract-field",

              "decorated-field",
              "field",

              "static-initialization",

              "public-constructor",
              "protected-constructor",
              "private-constructor",

              "constructor",

              "public-static-method",
              "protected-static-method",
              "private-static-method",

              "public-decorated-method",
              "protected-decorated-method",
              "private-decorated-method",

              "public-instance-method",
              "protected-instance-method",
              "private-instance-method",

              "public-abstract-method",
              "protected-abstract-method",

              "public-method",
              "protected-method",
              "private-method",

              "static-method",
              "instance-method",
              "abstract-method",

              "decorated-method",
              "method"
            ],
          "order": "as-written"
        }
      }],
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-redundant-type-constituents": "off",
        "indent": ["error", 2],
        "sort-keys": 0, // disable default eslint sort-keys
        "sort-keys/sort-keys-fix": 1,
        "array-bracket-spacing": ["error", "never"],
        "object-curly-spacing": ["error", "never"],
        "space-in-parens": ["error", "never"],
        "@typescript-eslint/array-type": "error",
        "@typescript-eslint/consistent-type-assertions": "error",
        "@typescript-eslint/consistent-type-imports": "error",
        "@typescript-eslint/prefer-for-of": "error",
        "@typescript-eslint/prefer-optional-chain": "error",
        "import/first": "error",
        "import/order": [
          "error",
          {
            "alphabetize": {"order": "asc", "caseInsensitive": false},
            "groups": ["builtin", "external", "internal", "parent", "sibling", "index"]
          }
        ],
        "import/no-duplicates": "error",// TypeScript-specific rules
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-unused-vars": [
          "error",
          {
            "vars": "all",
            "args": "after-used",
            "ignoreRestSiblings": false
          }
        ],
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-inferrable-types": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-empty-function": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/no-floating-promises": "error",
        // Angular-specific rules
        "angular/no-directive-replace": "off",
        "angular/no-service-method": "off",
        "angular/component-limit": ["error", 1],
        "angular/controller-as": "error",
        "angular/no-controller": "warn",
        // RxJS-specific rules
        "rxjs/no-unsafe-takeuntil": "error",
        "rxjs/no-exposed-subjects": "error",
        "import/no-default-export": "off",
        // Code style and best practices
        "no-debugger": "error",
        "no-empty": ["error", {"allowEmptyCatch": true}],
        "curly": ["error", "multi-line"],
        "eqeqeq": ["error", "smart"],
        "prefer-const": "error",
        "no-var": "error",
        "object-shorthand": "error",
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": ["error"],
        "no-use-before-define": "off",
        "@typescript-eslint/no-use-before-define": ["error"],
        // Prevent large files
        "max-lines": [
          "warn",
          {
            "max": 500,
            "skipBlankLines": true,
            "skipComments": true
          }
        ]
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {}
    }
  ]
}
